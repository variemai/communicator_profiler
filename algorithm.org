#+TITLE: Algorithm to create the Global Communicator tree
* The problem
** Create the global communicator tree from the data sent by each process
1. Each process gathers data for every communicator it creates and uses
2. Root process gathers this data from every process
*** The root process needs to be able to distinct and associate the communicator data
* Data
** Table of communicator names
** Table of communicator parents' names
** Table of bytes ( for each communicator )
** Table of messages ( for each communicator )
* Algorithm
#+begin_src c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _tnode{
    char *name;
    struct _tnode *parent;
    int bytes;
    int msgs;
}node;
char **names; //table of names
char **parents; //table of parents
int *bytes, *msgs;
int i,j,k;
node **head = NULL;
for (i = 0; i < N; i++) {
    if ( strcmp(names[i],"WORLD") == 0 && head == NULL){
        head = (node**)
    }
}
#+end_src
