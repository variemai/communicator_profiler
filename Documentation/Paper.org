#+TITLE: MPI Communicator Profiling Tool
#+OPTIONS: ^:nil
#+BIBLIOGRAPHY: bibliography plain

* Introduction
1. MPI Collectives are an important part of the MPI applications.
2. A critical component of the MPI collectives is the communicator.
3. The communicator defines a safe communication context for message passing.
   a. can also define the communication pattern
4. Communicators can also carry the topological structure when created using topology constructors.

# MPI applications frequently use collective communication primitives to perform communication operations among numerous processes. The work of \cite{10.1145/3295500.3356176} indicates that MPI collective communication is used even more frequently than the corresponding point to point communication.
# MPI applications comprise a significant part of the HPC applications.
# A significant part of the HPC applications consists for MPI applications.
One of the most common standards that has been and is currently used for the development of HPC applications is the Message Passing Interface (MPI). Communication between the processes in MPI takes place in specific communication contexts. A typical communication context that is used almost by every communication operation is provided by the communicator. Besides containing contexts of communication for both point to point and collective communication, the communicators (specifically the intra-communicators) can also be used to define the virtual topology. The virtual topology characterizes the logical communication pattern of the application and can be exploited by the runtime system to produce a more efficient mapping to the physical processors. MPI defines Cartesian, Graph and Distributed graph topologies. In order to define any of these topologies, those functions, create a new communicator where the necessary attributes are cached. Process topology mechanisms, although rarely properly implemented, can improve the application's communication \cite{1592864}. Additionally, a only a small subset of popular MPI applications use the virtual topology mechanisms \cite{10.1145/3295500.3356176}.  This leads to the "chicken and egg" problem as it is referred in \cite{GROPP201998}, where developers do not make use of the MPI virtual topologies and thus, MPI implementations do not see the need to optimize these routines. To tackle this issue it is important to be able to identify the frequency and volume that those virtual topology mechanisms are used by the communication primitives.  Communicators contain valuable information regarding the use of such features.

# Therefore, a communicator might be able to define the communication pattern  of a collective communication operation. As a result, depending on the application, it can have a serious impact on the application's performance. It is therefore important to be able obtain information related to the characteristics and usage of the communicators by the MPI applications. Such information is valuable for determining the efficiency of certain MPI library features such as the implementation of process topology communicators. Process topology mechanisms, although rarely implemented, can improve the application's communication \cite{1592864}.

# An essential component for performing collective communication is the communicator which besides defining a safe communication context for message passing, it can also have information about the virtual process topology of the application.

* Motivation
1. Why do we create this tool and do not use the existing tools?
   a. Is it better?
      a. What makes it better?
   b. Is it different?
      a. What makes it different?
      b. Why do we care about profiling in another way?
      c. Could more care about it?
* Contribution
* Notes
** Book of 2012 with profiling tools which also references scoreP
- There is a good argument there "Creating a Tool Set for Optimizing Topology-Aware Node Mappings". Could we sell it like this? A tool for Optimizing Topology-Aware Node mappings.

* Bibliography
#+BEGIN_SRC latex
\bibliographystyle{plain}
\bibliography{bibliography}
#+END_SRC
